{"version":3,"sources":["assets/scripts/GameManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport GameData from \"./GameData\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class GameManager extends cc.Component {\n\n    @property(cc.Sprite)\n    race: cc.Sprite = null;\n\n    @property(cc.Sprite)\n    job: cc.Sprite = null;\n\n    @property(cc.Label)\n    raceLabel: cc.Label ;\n\n    @property(cc.Label)\n    jobLabel: cc.Label;\n\n    selectId;\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n      /*  cc.loader.loadResDir(\"race\",cc.SpriteFrame, function (err, assets) {\n            if (err) {\n                cc.error(err);\n                return;\n            }\n            GameData.race = assets;\n        });\n        cc.loader.loadResDir(\"job\",cc.SpriteFrame ,function (err, assets) {\n            if (err) {\n                cc.error(err);\n                return;\n            }\n            GameData.job = assets;\n           // this.caculateLife(this.selectId);\n        });*/\n \n    }\n\n    public caculateLife(id) {\n        cc.log(\"id\" + id);\n        this.selectId = id;\n        GameData.currentCode = this.toUnicode(GameData.nickname, id);\n        cc.log(\"code\" + GameData.currentCode);\n        GameData.currentRace = this.toImagecode(GameData.currentCode, GameData.race.length-1);\n        GameData.currentJob = this.toImagecode(GameData.currentCode, GameData.job.length-1);\n        cc.log(\"race\" + GameData.currentRace);\n        cc.log(\"job\" + GameData.currentJob);\n        this.race.spriteFrame = GameData.race[GameData.currentRace];\n        this.job.spriteFrame = GameData.job[GameData.currentJob];\n        this.raceLabel.string = this.race.spriteFrame.name;\n        this.jobLabel.string = this.job.spriteFrame.name;\n    }\n\n    /*decodeName(str): number{ \n        let result = 0;\n        var value='';\n        for (var i = 0; i < str.length; i++) {\n            value = parseInt(str.charCodeAt(i)).toString(16);\n            result+=parseInt(value.replace(/\\D/g, ''));\n        }\n        return result+ GameData.year + GameData.month + GameData.date + GameData.gender;;\n    }*/\n\n    toUnicode(str,id): number{\n        let result = 0;\n        let unicodeStr = '';\n        for (let i = 0, iLength = str.length; i < iLength; i++) {\n            unicodeStr = str.charCodeAt(i).toString(16);\n            //cc.log(unicodeStr);\n            result+=parseInt(unicodeStr.replace(/\\D/g, ''),0);\n        }\n        cc.log(\"day\", GameData.day);\n        cc.log(\"month\", GameData.month);\n        cc.log(\"gender\", GameData.gender);\n        return result + GameData.year + GameData.month + GameData.day * GameData.gender*id;\n    }\n\n    toImagecode(value,imageCount): number{\n        while (value > imageCount)\n            value -= imageCount;\n        return Math.round(value);\n    }\n\n    // update (dt) {}\n}\n"]}